// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using backend.DBContext;

#nullable disable

namespace backend.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("backend.Models.Alumno", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("apellido");

                    b.Property<int>("CredtDisp")
                        .HasColumnType("int")
                        .HasColumnName("credt_disp");

                    b.Property<int>("IdDept")
                        .HasColumnType("int")
                        .HasColumnName("id_dept");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("nombre");

                    b.Property<int?>("Semestre")
                        .HasColumnType("int")
                        .HasColumnName("semestre");

                    b.HasKey("Id");

                    b.HasIndex("IdDept");

                    b.ToTable("alumno");
                });

            modelBuilder.Entity("backend.Models.Curso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Creditos")
                        .HasColumnType("int")
                        .HasColumnName("creditos");

                    b.Property<int>("Cupos")
                        .HasColumnType("int")
                        .HasColumnName("cupos");

                    b.Property<int?>("IdCursoPre")
                        .HasColumnType("int")
                        .HasColumnName("id_curso_pre");

                    b.Property<int>("IdPeriodo")
                        .HasColumnType("int")
                        .HasColumnName("id_periodo");

                    b.Property<int>("IdProfesor")
                        .HasColumnType("int")
                        .HasColumnName("id_profesor");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nombre");

                    b.HasKey("Id");

                    b.HasIndex("IdPeriodo");

                    b.HasIndex("IdProfesor");

                    b.ToTable("curso");
                });

            modelBuilder.Entity("backend.Models.CursosRealizado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("IdAlumno")
                        .HasColumnType("int")
                        .HasColumnName("id_alumno");

                    b.Property<int>("IdCurso")
                        .HasColumnType("int")
                        .HasColumnName("id_curso");

                    b.HasKey("Id");

                    b.HasIndex("IdAlumno");

                    b.ToTable("cursos_realizados");
                });

            modelBuilder.Entity("backend.Models.Facultad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(80)
                        .IsUnicode(false)
                        .HasColumnType("varchar(80)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("facultad");
                });

            modelBuilder.Entity("backend.Models.MatriculaAlumno", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("IdAlumno")
                        .HasColumnType("int")
                        .HasColumnName("id_alumno");

                    b.Property<int>("IdCurso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_curso");

                    b.HasKey("Id");

                    b.HasIndex("IdAlumno");

                    b.HasIndex("IdCurso");

                    b.ToTable("matricula_alumno");
                });

            modelBuilder.Entity("backend.Models.Periodo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Semestre")
                        .HasColumnType("int")
                        .HasColumnName("semestre");

                    b.Property<string>("Year")
                        .IsRequired()
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("year");

                    b.HasKey("Id");

                    b.ToTable("periodo");
                });

            modelBuilder.Entity("backend.Models.Profesor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("apellido");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("email");

                    b.Property<int>("ExpYear")
                        .HasColumnType("int")
                        .HasColumnName("exp_year");

                    b.Property<int>("IdDept")
                        .HasColumnType("int")
                        .HasColumnName("id_dept");

                    b.Property<string>("MaxTitulo")
                        .IsRequired()
                        .HasMaxLength(70)
                        .IsUnicode(false)
                        .HasColumnType("varchar(70)")
                        .HasColumnName("max_titulo");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("nombre");

                    b.HasKey("Id");

                    b.HasIndex("IdDept");

                    b.ToTable("profesor");
                });

            modelBuilder.Entity("backend.Models.Alumno", b =>
                {
                    b.HasOne("backend.Models.Facultad", "IdDeptNavigation")
                        .WithMany("Alumnos")
                        .HasForeignKey("IdDept")
                        .IsRequired()
                        .HasConstraintName("FK_alumno_facultad");

                    b.Navigation("IdDeptNavigation");
                });

            modelBuilder.Entity("backend.Models.Curso", b =>
                {
                    b.HasOne("backend.Models.Periodo", "IdPeriodoNavigation")
                        .WithMany("Cursos")
                        .HasForeignKey("IdPeriodo")
                        .IsRequired()
                        .HasConstraintName("FK_curso_periodo");

                    b.HasOne("backend.Models.Profesor", "IdProfesorNavigation")
                        .WithMany("Cursos")
                        .HasForeignKey("IdProfesor")
                        .IsRequired()
                        .HasConstraintName("FK_curso_profesor");

                    b.Navigation("IdPeriodoNavigation");

                    b.Navigation("IdProfesorNavigation");
                });

            modelBuilder.Entity("backend.Models.CursosRealizado", b =>
                {
                    b.HasOne("backend.Models.Alumno", "IdAlumnoNavigation")
                        .WithMany("CursosRealizados")
                        .HasForeignKey("IdAlumno")
                        .IsRequired()
                        .HasConstraintName("FK_cursos_realizados_alumno");

                    b.Navigation("IdAlumnoNavigation");
                });

            modelBuilder.Entity("backend.Models.MatriculaAlumno", b =>
                {
                    b.HasOne("backend.Models.Alumno", "IdAlumnoNavigation")
                        .WithMany("MatriculaAlumnos")
                        .HasForeignKey("IdAlumno")
                        .IsRequired()
                        .HasConstraintName("FK_matricula_alumno_alumno");

                    b.HasOne("backend.Models.Curso", "IdCursoNavigation")
                        .WithMany("MatriculaAlumnos")
                        .HasForeignKey("IdCurso")
                        .IsRequired()
                        .HasConstraintName("FK_matricula_alumno_curso");

                    b.Navigation("IdAlumnoNavigation");

                    b.Navigation("IdCursoNavigation");
                });

            modelBuilder.Entity("backend.Models.Profesor", b =>
                {
                    b.HasOne("backend.Models.Facultad", "IdDeptNavigation")
                        .WithMany("Profesors")
                        .HasForeignKey("IdDept")
                        .IsRequired()
                        .HasConstraintName("FK_profesor_facultad");

                    b.Navigation("IdDeptNavigation");
                });

            modelBuilder.Entity("backend.Models.Alumno", b =>
                {
                    b.Navigation("CursosRealizados");

                    b.Navigation("MatriculaAlumnos");
                });

            modelBuilder.Entity("backend.Models.Curso", b =>
                {
                    b.Navigation("MatriculaAlumnos");
                });

            modelBuilder.Entity("backend.Models.Facultad", b =>
                {
                    b.Navigation("Alumnos");

                    b.Navigation("Profesors");
                });

            modelBuilder.Entity("backend.Models.Periodo", b =>
                {
                    b.Navigation("Cursos");
                });

            modelBuilder.Entity("backend.Models.Profesor", b =>
                {
                    b.Navigation("Cursos");
                });
#pragma warning restore 612, 618
        }
    }
}
